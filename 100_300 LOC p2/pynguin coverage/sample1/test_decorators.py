# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import decorators as module_0


def test_case_0():
    none_type_0 = None
    float_0 = -1095.0
    cached_property_0 = module_0.cached_property(float_0)
    assert (
        f"{type(cached_property_0).__module__}.{type(cached_property_0).__qualname__}"
        == "decorators.cached_property"
    )
    assert cached_property_0.func == pytest.approx(-1095.0, abs=0.01, rel=0.01)
    cached_property_1 = module_0.cached_property(cached_property_0)
    var_0 = cached_property_1.__get__(none_type_0, none_type_0)
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "decorators.cached_property"
    )
    assert (
        f"{type(var_0.func).__module__}.{type(var_0.func).__qualname__}"
        == "decorators.cached_property"
    )


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    cached_property_0 = module_0.cached_property(none_type_0)
    assert (
        f"{type(cached_property_0).__module__}.{type(cached_property_0).__qualname__}"
        == "decorators.cached_property"
    )
    assert cached_property_0.func is None
    cached_property_0.__get__(cached_property_0, none_type_0)


def test_case_2():
    none_type_0 = None
    cached_property_0 = module_0.cached_property(none_type_0)
    assert (
        f"{type(cached_property_0).__module__}.{type(cached_property_0).__qualname__}"
        == "decorators.cached_property"
    )
    assert cached_property_0.func is None
