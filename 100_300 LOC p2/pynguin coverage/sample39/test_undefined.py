# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import undefined as module_0
import inspect as module_1


def test_case_0():
    ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
    assert (
        f"{type(ignore_undefined_parameters_0).__module__}.{type(ignore_undefined_parameters_0).__qualname__}"
        == "undefined._IgnoreUndefinedParameters"
    )


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "A7)V1O}jVe"
    ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
    assert (
        f"{type(ignore_undefined_parameters_0).__module__}.{type(ignore_undefined_parameters_0).__qualname__}"
        == "undefined._IgnoreUndefinedParameters"
    )
    callable_0 = ignore_undefined_parameters_0.create_init(
        ignore_undefined_parameters_0
    )
    str_1 = "\x0b[p$."
    dict_0 = ignore_undefined_parameters_0.handle_dump(str_1)
    callable_1 = ignore_undefined_parameters_0.create_init(
        ignore_undefined_parameters_0
    )
    none_type_0 = None
    dict_1 = ignore_undefined_parameters_0.handle_dump(none_type_0)
    callable_2 = ignore_undefined_parameters_0.create_init(str_0)
    dict_2 = {str_0: str_0, str_1: str_1, str_1: str_1, str_0: str_0}
    ignore_undefined_parameters_1 = module_0._IgnoreUndefinedParameters()
    module_0._IgnoreUndefinedParameters(**dict_2)


@pytest.mark.xfail(strict=True)
def test_case_2():
    catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters()
    assert (
        f"{type(catch_all_undefined_parameters_0).__module__}.{type(catch_all_undefined_parameters_0).__qualname__}"
        == "undefined._CatchAllUndefinedParameters"
    )
    catch_all_undefined_parameters_0.handle_from_dict(
        catch_all_undefined_parameters_0, catch_all_undefined_parameters_0
    )


@pytest.mark.xfail(strict=True)
def test_case_3():
    ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
    assert (
        f"{type(ignore_undefined_parameters_0).__module__}.{type(ignore_undefined_parameters_0).__qualname__}"
        == "undefined._IgnoreUndefinedParameters"
    )
    ignore_undefined_parameters_0.handle_from_dict(
        ignore_undefined_parameters_0, ignore_undefined_parameters_0
    )


def test_case_4():
    ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
    assert (
        f"{type(ignore_undefined_parameters_0).__module__}.{type(ignore_undefined_parameters_0).__qualname__}"
        == "undefined._IgnoreUndefinedParameters"
    )
    raise_undefined_parameters_0 = module_0._RaiseUndefinedParameters()
    assert (
        f"{type(raise_undefined_parameters_0).__module__}.{type(raise_undefined_parameters_0).__qualname__}"
        == "undefined._RaiseUndefinedParameters"
    )
    none_type_0 = None
    callable_0 = ignore_undefined_parameters_0.create_init(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    undefined_0 = module_0.Undefined.EXCLUDE
    catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters()
    assert (
        f"{type(catch_all_undefined_parameters_0).__module__}.{type(catch_all_undefined_parameters_0).__qualname__}"
        == "undefined._CatchAllUndefinedParameters"
    )
    callable_0 = catch_all_undefined_parameters_0.create_init(undefined_0)
    catch_all_undefined_parameters_0.handle_dump(catch_all_undefined_parameters_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
    assert (
        f"{type(ignore_undefined_parameters_0).__module__}.{type(ignore_undefined_parameters_0).__qualname__}"
        == "undefined._IgnoreUndefinedParameters"
    )
    callable_0 = ignore_undefined_parameters_0.create_init(
        ignore_undefined_parameters_0
    )
    str_0 = "\x0b[p$."
    dict_0 = ignore_undefined_parameters_0.handle_dump(str_0)
    dict_1 = ignore_undefined_parameters_0.handle_to_dict(str_0, callable_0)
    callable_1 = ignore_undefined_parameters_0.create_init(
        ignore_undefined_parameters_0
    )
    none_type_0 = None
    dict_1.remove(none_type_0)


def test_case_7():
    ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
    assert (
        f"{type(ignore_undefined_parameters_0).__module__}.{type(ignore_undefined_parameters_0).__qualname__}"
        == "undefined._IgnoreUndefinedParameters"
    )
    raise_undefined_parameters_0 = module_0._RaiseUndefinedParameters()
    assert (
        f"{type(raise_undefined_parameters_0).__module__}.{type(raise_undefined_parameters_0).__qualname__}"
        == "undefined._RaiseUndefinedParameters"
    )
    none_type_0 = None
    callable_0 = raise_undefined_parameters_0.create_init(none_type_0)
    callable_1 = ignore_undefined_parameters_0.create_init(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
    assert (
        f"{type(ignore_undefined_parameters_0).__module__}.{type(ignore_undefined_parameters_0).__qualname__}"
        == "undefined._IgnoreUndefinedParameters"
    )
    callable_0 = ignore_undefined_parameters_0.create_init(
        ignore_undefined_parameters_0
    )
    module_1.unwrap(callable_0, stop=callable_0)
