# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import example as module_0


def test_case_0():
    robot_0 = module_0.Robot()
    assert f"{type(robot_0).__module__}.{type(robot_0).__qualname__}" == "example.Robot"
    assert module_0.ALPHABET == "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    var_0 = robot_0.prefix()


def test_case_1():
    robot_0 = module_0.Robot()
    assert f"{type(robot_0).__module__}.{type(robot_0).__qualname__}" == "example.Robot"
    assert module_0.ALPHABET == "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    var_0 = robot_0.del_name()
    var_1 = robot_0.reset()
    var_2 = robot_0.reset()
    robot_1 = module_0.Robot()
    var_3 = robot_1.get_name()


def test_case_2():
    robot_0 = module_0.Robot()
    assert f"{type(robot_0).__module__}.{type(robot_0).__qualname__}" == "example.Robot"
    assert module_0.ALPHABET == "ABCDEFGHIJKLMNOPQRSTUVWXYZ"


def test_case_3():
    robot_0 = module_0.Robot()
    assert f"{type(robot_0).__module__}.{type(robot_0).__qualname__}" == "example.Robot"
    assert module_0.ALPHABET == "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    var_0 = robot_0.reset()
    var_1 = robot_0.prefix()
    var_2 = robot_0.prefix()


@pytest.mark.xfail(strict=True)
def test_case_4():
    robot_0 = module_0.Robot()
    assert f"{type(robot_0).__module__}.{type(robot_0).__qualname__}" == "example.Robot"
    assert module_0.ALPHABET == "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    robot_1 = module_0.Robot()
    var_0 = robot_1.get_name()
    var_1 = robot_1.prefix()
    var_2 = robot_0.suffix()
    var_3 = robot_0.get_name()
    var_4 = robot_0.get_name()
    var_4.del_name()
