# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import example as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    circular_buffer_0 = module_0.CircularBuffer(list_0)
    assert circular_buffer_0.read_point == 0
    assert circular_buffer_0.write_point == 0
    var_0 = circular_buffer_0.clear()
    circular_buffer_0.overwrite(var_0)


def test_case_1():
    bool_0 = False
    bytes_0 = b"y\xe8"
    circular_buffer_0 = module_0.CircularBuffer(bytes_0)
    assert circular_buffer_0.read_point == 0
    assert circular_buffer_0.write_point == 0
    with pytest.raises(module_0.BufferFullException):
        circular_buffer_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x03"
    circular_buffer_0 = module_0.CircularBuffer(bytes_0)
    assert circular_buffer_0.read_point == 0
    assert circular_buffer_0.write_point == 0
    var_0 = circular_buffer_0.read()
    assert var_0 == "\x03"
    var_1 = circular_buffer_0.overwrite(var_0)
    var_0.overwrite(var_1)


def test_case_3():
    int_0 = 1726
    buffer_full_exception_0 = module_0.BufferFullException(int_0)
    assert buffer_full_exception_0.message == 1726
    bool_0 = False
    circular_buffer_0 = module_0.CircularBuffer(bool_0)
    assert circular_buffer_0.read_point == 0
    assert circular_buffer_0.write_point == 0
    with pytest.raises(module_0.BufferEmptyException):
        circular_buffer_0.read()


def test_case_4():
    none_type_0 = None
    buffer_full_exception_0 = module_0.BufferFullException(none_type_0)
    assert buffer_full_exception_0.message is None


def test_case_5():
    bool_0 = True
    buffer_empty_exception_0 = module_0.BufferEmptyException(bool_0)
    assert buffer_empty_exception_0.message is True
    buffer_empty_exception_1 = module_0.BufferEmptyException(buffer_empty_exception_0)
    assert (
        f"{type(buffer_empty_exception_1.message).__module__}.{type(buffer_empty_exception_1.message).__qualname__}"
        == "example.BufferEmptyException"
    )
    none_type_0 = None
    buffer_empty_exception_2 = module_0.BufferEmptyException(none_type_0)
    assert buffer_empty_exception_2.message is None
    bool_1 = True
    circular_buffer_0 = module_0.CircularBuffer(bool_1)
    assert circular_buffer_0.read_point == 0
    assert circular_buffer_0.write_point == 0


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = -1491
    module_0.CircularBuffer(int_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = '"Yy'
    int_0 = 75
    circular_buffer_0 = module_0.CircularBuffer(int_0)
    assert circular_buffer_0.read_point == 0
    assert circular_buffer_0.write_point == 0
    var_0 = circular_buffer_0.clear()
    var_0.overwrite(str_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    none_type_0 = None
    int_0 = 4168
    circular_buffer_0 = module_0.CircularBuffer(int_0)
    assert circular_buffer_0.read_point == 0
    assert circular_buffer_0.write_point == 0
    circular_buffer_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    bool_0 = False
    circular_buffer_0 = module_0.CircularBuffer(bool_0)
    assert circular_buffer_0.read_point == 0
    assert circular_buffer_0.write_point == 0
    circular_buffer_0.overwrite(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_10():
    bytes_0 = b"\x9f\xb7\xe9\x86"
    circular_buffer_0 = module_0.CircularBuffer(bytes_0)
    assert circular_buffer_0.read_point == 0
    assert circular_buffer_0.write_point == 0
    var_0 = circular_buffer_0.read()
    assert var_0 == "\x9f"
    assert circular_buffer_0.read_point == 1
    var_1 = circular_buffer_0.overwrite(var_0)
    assert circular_buffer_0.write_point == 1
    module_0.CircularBuffer(var_1)


@pytest.mark.xfail(strict=True)
def test_case_11():
    bool_0 = False
    buffer_empty_exception_0 = module_0.BufferEmptyException(bool_0)
    assert buffer_empty_exception_0.message is False
    bytes_0 = b"\xc2"
    none_type_0 = None
    buffer_full_exception_0 = module_0.BufferFullException(none_type_0)
    assert buffer_full_exception_0.message is None
    buffer_empty_exception_1 = module_0.BufferEmptyException(none_type_0)
    assert buffer_empty_exception_1.message is None
    circular_buffer_0 = module_0.CircularBuffer(bytes_0)
    assert circular_buffer_0.read_point == 0
    assert circular_buffer_0.write_point == 0
    var_0 = circular_buffer_0.overwrite(bool_0)
    circular_buffer_0.overwrite(var_0)
