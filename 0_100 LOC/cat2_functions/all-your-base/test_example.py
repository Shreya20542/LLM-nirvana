# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import example as module_0


def test_case_0():
    int_0 = 426
    var_0 = module_0.to_digits(int_0, int_0)
    var_1 = module_0.rebase(int_0, var_0, int_0)


def test_case_1():
    float_0 = 3444.44611
    var_0 = module_0.to_digits(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 426
    var_0 = module_0.to_digits(int_0, int_0)
    var_1 = module_0.rebase(int_0, var_0, int_0)
    bool_0 = False
    var_2 = module_0.to_digits(bool_0, var_1)
    module_0.from_digits(int_0, var_0)


def test_case_3():
    int_0 = -2380
    with pytest.raises(ValueError):
        module_0.rebase(int_0, int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 3446.7110520991864
    module_0.rebase(float_0, float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = -2372
    module_0.from_digits(int_0, int_0)


def test_case_6():
    int_0 = 3098
    var_0 = module_0.to_digits(int_0, int_0)
    bool_0 = True
    with pytest.raises(ValueError):
        module_0.rebase(int_0, var_0, bool_0)


def test_case_7():
    int_0 = 362
    int_1 = 1642
    var_0 = module_0.to_digits(int_0, int_1)
    with pytest.raises(ValueError):
        module_0.rebase(int_0, var_0, int_0)
