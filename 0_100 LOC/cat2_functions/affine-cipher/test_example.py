# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import example as module_0


def test_case_0():
    bool_0 = False
    with pytest.raises(ValueError):
        module_0.translate(bool_0, bool_0, bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 3209
    bytes_0 = b"\xdfP\xfeW\xe2\xe8\xd3\xd7\xf4ub\xe4\xc5"
    module_0.encode(bytes_0, int_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "Vvf(F+pn|$C#&&YVA"
    module_0.decode(str_0, str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    module_0.encode(bool_0, bool_0, bool_0)


def test_case_4():
    bool_0 = True
    with pytest.raises(ValueError):
        module_0.translate(bool_0, bool_0, bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = '\tf9\t*& .00&U"|2'
    int_0 = 3209
    bytes_0 = b"\xdfP\xfeW\xe2\xe8\xd3\xd7\xf4ub\xe4\xc5"
    module_0.encode(str_0, int_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = '\tf9\t*& .00&U"|2'
    int_0 = 3209
    bytes_0 = b"\xdfP\xfeW\xe2\xe8\xd3\xd7\xf4ub\xe4\xc5"
    module_0.translate(str_0, int_0, bytes_0, bytes_0)


def test_case_7():
    str_0 = '\tf9\t*& .00&U"|2'
    int_0 = 3209
    bytes_0 = b"\xdfP\xfeW\xe2\xe8\xd3\xd7\xf4ub\xe4\xc5"
    dict_0 = {str_0: str_0, bytes_0: bytes_0}
    var_0 = module_0.encode(dict_0, int_0, bytes_0)
    assert var_0 == ""
    assert module_0.BLOCK_SIZE == 5
    assert module_0.ALPHABET == 26


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "4?*t\\}Z0$C6[$"
    int_0 = 3209
    bytes_0 = b"\xdfP\xfeW\xe2\xe8\xd3\xd7\xf4ub\xe4\xc5"
    module_0.translate(str_0, int_0, bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = '\tf9\t*& .00&U"|2'
    int_0 = 3209
    module_0.decode(str_0, int_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = '\tf9\t*& .00&U"|2'
    int_0 = 3209
    var_0 = module_0.encode(str_0, int_0, int_0)
    assert var_0 == "o900x 2"
    assert module_0.BLOCK_SIZE == 5
    assert module_0.ALPHABET == 26
    int_1 = 32
    module_0.translate(str_0, var_0, int_1, int_1)
