# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import example as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = 1785.61
    bytes_0 = b"\x90,{\xfcq_&\xe5\x7f\x0f\xd2\xd1\xe2\x84\xa6\xb0\xd9u\x88"
    module_0.largest_product(bytes_0, float_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.largest_product(bool_0, bool_0)
    assert var_0 == 1


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xf7\x1a\xe4\xd8\xfcuJu,m\xde\x0e\xf6"
    module_0.largest_product(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xe2\x84\xa5"
    module_0.slices(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x90,{\xfcq_&\xe5\x7f\x0f\xd2\xd1\xe2\x84\xa6\xb0\xd9u\x88"
    float_0 = -1955.39452
    module_0.largest_product(bytes_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    bytes_0 = b"\xa1"
    module_0.slices(bytes_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "F`;VXC"
    bool_0 = True
    module_0.largest_product(str_0, bool_0)


def test_case_7():
    str_0 = "3"
    bool_0 = True
    var_0 = module_0.largest_product(str_0, bool_0)
    assert var_0 == 3
