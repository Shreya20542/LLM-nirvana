# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import example as module_0
import builtins as module_1


def test_case_0():
    str_0 = " "
    var_0 = module_0.annotate(str_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.annotate(none_type_0)
    tuple_0 = (var_0, var_0, var_0, var_0)
    var_1 = module_0.annotate(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    var_0 = module_0.annotate(bool_0)
    none_type_0 = None
    var_1 = module_0.annotate(none_type_0)
    str_0 = "$Tu"
    tuple_0 = (var_0, var_1, str_0, var_0)
    module_0.annotate(tuple_0)


def test_case_3():
    str_0 = "FcnTe4PKYpYB*;[7Fp|I"
    with pytest.raises(ValueError):
        module_0.verify_board(str_0)


def test_case_4():
    str_0 = "*"
    var_0 = module_0.annotate(str_0)
    bool_0 = False
    var_1 = module_0.annotate(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = " "
    var_0 = module_0.annotate(str_0)
    var_1 = module_0.annotate(var_0)
    list_0 = [var_1, str_0, var_1]
    var_2 = module_0.annotate(list_0)
    str_1 = " "
    var_3 = module_0.annotate(str_1)
    none_type_0 = None
    var_4 = module_0.annotate(none_type_0)
    list_1 = [none_type_0, var_3]
    var_5 = module_0.annotate(var_4)
    module_0.annotate(list_1)


@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    var_0 = module_0.annotate(none_type_0)
    str_0 = " *"
    var_1 = module_0.annotate(str_0)
    none_type_1 = None
    list_0 = [none_type_1, var_1]
    module_1.object(**list_0)
